<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        1、每个Bean中的id和name都必须是唯一的，如果有2个id为car的Bean或者name为cars的bean则会抛错
        2、在Bean中如果给Bean使用了name标签则可以对Bean进行别名操作
    -->
    <alias name="cars" alias="newCar"/>
    <bean id="car" name="cars" class="com.runqing.spring.domain.Car">
        <property name="carName" value="兰博基尼"/>
        <property name="carChassis" ref="chassis"/>
    </bean>

    <bean id="chassis" class="com.runqing.spring.domain.CarChassis">
        <property name="chassisName" value="Urus底盘"/>
    </bean>

    <!--以下Bean定义用来演示构造器注入Bean-->
    <!--<bean id="classroom" class="com.runqing.spring.instance.ClassRoom">
        <property name="className" value="高三一班"/>
    </bean>
    <bean id="teacher" class="com.runqing.spring.instance.Teacher">
        <constructor-arg ref="classroom"/>
    </bean>-->

    <!--以下Bean定义用来测试使用静态构造方式实例化Bean-->
    <bean id="classrooms" class="com.runqing.spring.instance.ClassRoom" factory-method="getInstance"/>
    <bean id="teachers" class="com.runqing.spring.instance.Teacher">
        <constructor-arg ref="classrooms"/>
    </bean>

    <!--以下Bean定义用来测试使用静态构造方式实例化Bean-->
    <bean id="classroom" class="com.runqing.spring.instance.ClassRoom"/>

    <bean id="bj" factory-bean="classroom" factory-method="getClassRoom"/>
    <bean id="teacher" class="com.runqing.spring.instance.Teacher">
        <constructor-arg ref="classrooms"/>
    </bean>

    <!--以下Bean用来测试集合注入-->
    <bean id="student" class="com.runqing.spring.domain.Student">
        <property name="hobby">
            <list>
                <value>list数据</value>
            </list>
        </property>

        <property name="eat">
            <set>
                <value>111</value>
                <value>222</value>
            </set>
        </property>

        <property name="info">
            <map>
                <entry key="name" value="润清"/>
                <entry key="age" value="18"/>
            </map>
        </property>
    </bean>

    <!--以下配置用来测试方法注入-->
   <!-- <bean id="thief" scope="prototype" class="com.runqing.spring.di.Thief">
    </bean>-->

    <!--
        通过byName会去Police中根据名字找thief的Bean，发现在配置文件中有id为thief
    -->
    <!--<bean id="police" class="com.runqing.spring.di.Police" autowire="byName">
        &lt;!&ndash;可以使用注解方式产生多个实例Bean&ndash;&gt;
        &lt;!&ndash;<lookup-method name="getThief" bean="thief"/>&ndash;&gt;
    </bean>-->

    <!--以下配置用来测试任意方法替换-->
    <bean id="wife" class="com.runqing.spring.di.Wife">
    </bean>
    <bean id="thief" scope="prototype" class="com.runqing.spring.di.Thief">
    </bean>
    <bean id="police" class="com.runqing.spring.di.Police" autowire="byName">
        <replaced-method name="getThief" replacer="wife"/>
    </bean>
</beans>